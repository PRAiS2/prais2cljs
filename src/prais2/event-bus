chrome.cljs:28:(rum/defc nav-link [active? nav-item click-handler]
chrome.cljs:31:                  :on-click click-handler
chrome.cljs:32:                  :on-touch-start click-handler}
chrome.cljs:45:                                  (fn [e] (core/click->event-bus e %2 (if (= %2 :data) :example :top)))))
chrome.cljs:49:(rum/defc bs-nav-link [active? nav-item click-handler]
chrome.cljs:51:   [:button.navbar-btn {:on-click click-handler
chrome.cljs:90:                                     (fn [e] (core/click->event-bus e %2 :top))))
core.cljs:105:(defn click->event-bus
core.cljs:107:  (prn (str "click->event-bus " dispatch-key dispatch-value))
data.cljs:332:  [:th {:on-click #(when (:sortable header) (core/click->event-bus % :sort-toggle column-key))
data.cljs:333:        :on-touch-start #(when (:sortable header) (core/click->event-bus % :sort-toggle column-key))
data.cljs:352:      (let [info-handler #(core/click->event-bus % :info-clicked column-key)]
data.cljs:417:                   info-handler #(core/click->event-bus % :open-hospital-modal h-code)]
data.cljs:650:        close-handler #(core/click->event-bus % :close-hospital-modal selected-h-code)]
faqs.cljs:23:                 :on-click #(core/click->event-bus % :show-faq faq-ref)
faqs.cljs:24:                 :on-touch-start #(core/click->event-bus % :show-faq faq-ref)
faqs.cljs:79:            :on-click #(core/click->event-bus % :faqs :top)
faqs.cljs:80:            :on-touch-start #(core/click->event-bus % :faqs :top)
logger.cljs:123:(defn click->log-bus
logger.cljs:154:    :on-click #(click->log-bus % event-key nil)}
logger.cljs:267:                              :on-click #(click->log-bus % :parse-session nil)
logger.cljs:268:                              :on-touch-start #(click->log-bus % :parse-session nil)}
main.cljs:77:                       :on-click #(core/click->event-bus % :data :example)} "Example"]]
main.cljs:84:                   :on-click #(core/click->event-bus % :data :map)} "Map"]]
main.cljs:91:           :on-click #(core/click->event-bus % :data :table)} "Table"]]]]])
main.cljs:325:  (dispatch event-bus-pub :click-on-map-marker zoom-to-hospital)
main.cljs:327:  (dispatch event-bus-pub :click-on-map-menu-item zoom-to-hospital)
map_data.cljs:19:                             :on-click #(core/click->event-bus % :data nil)} "visit the data page"]
map_data.cljs:38:                             :on-click #(core/click->event-bus % :data nil)} "visit the data page"]
open_layers_map.cljs:105:(declare map-click-handler)
open_layers_map.cljs:127:                    (.on hospital-map "click" map-click-handler)))
open_layers_map.cljs:134:(defn map-click-handler
open_layers_map.cljs:141:      (put! event-bus [:click-on-map-marker (keyword (.get feature "code")) event])
open_layers_map.cljs:207:   {:on-click #(core/click->event-bus % :reset-map-to-home nil)
open_layers_map.cljs:223:         :on-click #(put! event-bus [:click-on-map-menu-item (keyword (:h-code row))])}
