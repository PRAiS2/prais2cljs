1629061107589:(status)
1629111665644:(js/console.log "tessssting")
1631193693835:(js/alert "test")
1631204691989:(js/alert "testiiiiiiiiiiing")
1631205586971:(js/console.log "et voil√†")
1631276821885:(js/alert "hallelujah!!")
1631279660847:(js/alert "test")
1631528156767:(js/alert "test!")
1631535824031:(js/console.log "test")
1631535871545:(require 'prais2.content)
1631535881613:(prais2.content/get-hospital-data)
1631535953369:(require 'prais2.content :reload))
1631535956366:)
1631535961167:(require 'prais2.content :reload)
1631535968324:(prais2.content/get-hospital-data)
1631536129359:(:body (<! (http/get "/data.edn"\n                     {:as :auto})))
1631536194619:((\n  require '[cljs-http.client :as http])\n )
1631536210329:(require '[cljs-http.client :as http])
1631536335034:(require 'cljs-http.client)
1631536508534:(require  [cljs-http.client :as http])
1631536522356:(require  ''[cljs-http.client :as http])
1631536539998:(require  '[cljs-http.client :as http])
1631536616819:(require '[cljs.repl.browser :as browser])
1631536856096:(require  '[cljs-http.client :as http])
1631536897544:(:body (<! (http/get "/data.edn" {:as :auto})))
1631536949451:(require '[cljs.core.async :refer [<! take!]])
1631536953010:(:body (<! (http/get "/data.edn" {:as :auto})))
1631537003054:(go\n  (let [data (:body (<! (http/get endpoint {:as :auto})))]\n    (println data)))
1631537021921:(go\n  (let [data (:body (<! (http/get "/data.edn" {:as :auto})))]\n    (println data)))
1631537129092:(require '[cljs.core.async :refer-macros [go]])
1631537131497:(go\n  (let [data (:body (<! (http/get "/data.edn" {:as :auto})))]\n    (println data)))
1631537215442:(js/console.log "delimiter")
1631537221687:(go\n  (let [data (:body (<! (http/get "/data.edn" {:as :auto})))]\n    (println data)))
1631537311645:(require 'prais2.content)
1631537321595:(prais2.content/get-file "/data.edn")
1631537378191:(take!\n (prais2.content/get-file "data.edn")\n #(println %))
1631537441467:(take!\n (prais2.content/get-file "/data.edn")\n #(println %))
1631537519453:(take!\n (prais2.content/get-file "/data.edn")\n #(println (:2013 %)))
1631537604569:(clojure.edn/read-string (slurp "/data.edn")\n                         )
1631537638384:(clojure.edn/read-string (clojure.core/slurp "/data.edn"))
1631606684425:(require '[prais2.content :as pc])
1631606696430:(pc/->records pc/hdata)
1631607664061:(js/alert "test")
1631607790771:(require '[prais2.content :as pc])
1631607808270:(pc/->records pc/hdata)
1631607904490:(println "test")
1631607920130:(js/alert "test")
1631608640080:(type pc/hdata)
1631608888122:(cljs.reader/read-string {:readers pc/edn-readers} "#prais2.content/Row{:inner-high 99.6, :inner-low 96.6, :h-lat 54.594167, :n-ops 232, :outer-high 100.0, :n-survivors 228, :h-lon -5.953666, :survival-rate 98.3, :h-code "RVB", :outer-low 95.3, :h-name "Belfast, Royal Victoria Hospital", :n-deaths 4}")
1631609059289:(cljs.reader/read-string {:readers pc/edn-readers} (str "#prais2.content/Row" {:inner-high 99.6, :inner-low 96.6, :h-lat 54.594167, :n-ops 232, :outer-high 100.0, :n-survivors 228, :h-lon -5.953666, :survival-rate 98.3, :h-code "RVB", :outer-low 95.3, :h-name "Belfast, Royal Victoria Hospital", :n-deaths 4}))
1631609167892:(println (cljs.reader/read-string {:readers pc/edn-readers} (str "#prais2.content/Row" {:inner-high 99.6, :inner-low 96.6, :h-lat 54.594167, :n-ops 232, :outer-high 100.0, :n-survivors 228, :h-lon -5.953666, :survival-rate 98.3, :h-code "RVB", :outer-low 95.3, :h-name "Belfast, Royal Victoria Hospital", :n-deaths 4})))
1631609266786:(println (clojure.edn/read-string {:readers pc/edn-readers} (str "#prais2.content/Row" {:inner-high 99.6, :inner-low 96.6, :h-lat 54.594167, :n-ops 232, :outer-high 100.0, :n-survivors 228, :h-lon -5.953666, :survival-rate 98.3, :h-code "RVB", :outer-low 95.3, :h-name "Belfast, Royal Victoria Hospital", :n-deaths 4})))
1631609302355:(require 'clojure.edn)
1631609706098:(cljs.reader/read-string "{:a 1 :b 2}")
1631609835241:(string? "abc")
